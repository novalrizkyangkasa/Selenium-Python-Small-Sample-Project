{"name": "test_add_to_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: Product added.\nMessage: unexpected alert open: {Alert text : Product added.}\n  (Session info: chrome=133.0.6943.127)\nStacktrace:\n0   chromedriver                        0x00000001009c6b58 cxxbridge1$str$ptr + 2724820\n1   chromedriver                        0x00000001009bf1b8 cxxbridge1$str$ptr + 2693684\n2   chromedriver                        0x0000000100525afc cxxbridge1$string$len + 93348\n3   chromedriver                        0x00000001005ae408 cxxbridge1$string$len + 652720\n4   chromedriver                        0x0000000100560ba0 cxxbridge1$string$len + 335176\n5   chromedriver                        0x000000010098f610 cxxbridge1$str$ptr + 2498188\n6   chromedriver                        0x0000000100992924 cxxbridge1$str$ptr + 2511264\n7   chromedriver                        0x0000000100974cb0 cxxbridge1$str$ptr + 2389292\n8   chromedriver                        0x00000001009931cc cxxbridge1$str$ptr + 2513480\n9   chromedriver                        0x0000000100965c98 cxxbridge1$str$ptr + 2327828\n10  chromedriver                        0x00000001009af880 cxxbridge1$str$ptr + 2629884\n11  chromedriver                        0x00000001009afa08 cxxbridge1$str$ptr + 2630276\n12  chromedriver                        0x00000001009bee2c cxxbridge1$str$ptr + 2692776\n13  libsystem_pthread.dylib             0x0000000190ce02e4 _pthread_start + 136\n14  libsystem_pthread.dylib             0x0000000190cdb0fc thread_start + 8", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc9f8fbec4d309f89a1767968ce11b00\")>\n\n    def test_add_to_cart(driver):\n    \n        object = driver.find_element(By.XPATH, '//*[@id=\"tbodyid\"]/div[1]/div/a/img')\n        driver.execute_script('arguments[0].scrollIntoView();',object)\n    \n        elementXpath = driver.find_element(By.XPATH, '//*[@id=\"tbodyid\"]/div[1]/div/a/img').click()\n        time.sleep(2)\n        elementXpath = driver.find_element(By.XPATH, '//*[@id=\"tbodyid\"]/div[2]/div/a').click()\n        time.sleep(1)\n    \n>       take_screenshot(driver, \"after_add_to_cart\")\n\nmaintest.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmaintest.py:24: in take_screenshot\n    driver.get_screenshot_as_file(screenshot_path)\n../../../.pyenv/versions/3.12.6/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:805: in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n../../../.pyenv/versions/3.12.6/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:839: in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode(\"ascii\"))\n../../../.pyenv/versions/3.12.6/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:850: in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)[\"value\"]\n../../../.pyenv/versions/3.12.6/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10336c110>\nresponse = {'status': 500, 'value': '{\"value\":{\"data\":{\"text\":\"Product added.\"},\"error\":\"unexpected alert open\",\"message\":\"unexpe...000190ce02e4 _pthread_start + 136\\\\n14  libsystem_pthread.dylib             0x0000000190cdb0fc thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n>           raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\nE           selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: Product added.\nE           Message: unexpected alert open: {Alert text : Product added.}\nE             (Session info: chrome=133.0.6943.127)\nE           Stacktrace:\nE           0   chromedriver                        0x00000001009c6b58 cxxbridge1$str$ptr + 2724820\nE           1   chromedriver                        0x00000001009bf1b8 cxxbridge1$str$ptr + 2693684\nE           2   chromedriver                        0x0000000100525afc cxxbridge1$string$len + 93348\nE           3   chromedriver                        0x00000001005ae408 cxxbridge1$string$len + 652720\nE           4   chromedriver                        0x0000000100560ba0 cxxbridge1$string$len + 335176\nE           5   chromedriver                        0x000000010098f610 cxxbridge1$str$ptr + 2498188\nE           6   chromedriver                        0x0000000100992924 cxxbridge1$str$ptr + 2511264\nE           7   chromedriver                        0x0000000100974cb0 cxxbridge1$str$ptr + 2389292\nE           8   chromedriver                        0x00000001009931cc cxxbridge1$str$ptr + 2513480\nE           9   chromedriver                        0x0000000100965c98 cxxbridge1$str$ptr + 2327828\nE           10  chromedriver                        0x00000001009af880 cxxbridge1$str$ptr + 2629884\nE           11  chromedriver                        0x00000001009afa08 cxxbridge1$str$ptr + 2630276\nE           12  chromedriver                        0x00000001009bee2c cxxbridge1$str$ptr + 2692776\nE           13  libsystem_pthread.dylib             0x0000000190ce02e4 _pthread_start + 136\nE           14  libsystem_pthread.dylib             0x0000000190cdb0fc thread_start + 8\n\n../../../.pyenv/versions/3.12.6/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:228: UnexpectedAlertPresentException"}, "start": 1740104957735, "stop": 1740104961186, "uuid": "325a498e-1586-4467-8558-615115451aae", "historyId": "07875368d2368545b9a4bfa153fa70b5", "testCaseId": "07875368d2368545b9a4bfa153fa70b5", "fullName": "maintest#test_add_to_cart", "labels": [{"name": "suite", "value": "maintest"}, {"name": "host", "value": "novalrizkys-MacBook-Air.local"}, {"name": "thread", "value": "36378-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "maintest"}]}